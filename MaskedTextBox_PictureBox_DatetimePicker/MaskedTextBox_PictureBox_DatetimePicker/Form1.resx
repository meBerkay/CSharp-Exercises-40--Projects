<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>